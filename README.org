* issuecheck

Isseucheck aims to provide commandline services to programmers who need to embed issue id's in their commit messages.

** Why issuecheck?
More and more code is kept in sourcecode repositories. Changes to code is managed in issue tracking systems. Linking those two worlds is often done by referring to issues in commit messages. 

Commit messages are often written in a coding state of mind. Coming up with the right issue id to put in the message is often felt as an unwelcome distraction.

This tool aims to allow coders to stay focussed while referring to the right issues without having to change context by going into some gruesome webinterface to find the right issue number.

Issuecheck aims to be unobtrusive. This means:
- helping and not claiming
- lean and mean
- easy to install
- rock solid

** What can issuecheck do for you today?
It provides a convenient way to (inobtrusively) inform you about JIRA issue keys that you might put in  your commit messages to your SCM software.

It provides fast answers on the commandline to the following questions:
- Does my commit message contain JIRA issues keys that comply to regex "[A-Z][A-Z0-9_]*?-[0-9]*" ?
- Are the JIRA issue keys I refer to part of a project that I want to commit to?
- Do the JIRA issues that I refer to, exist on my JIRA system?
- What is the type, status and summary of the JIRA issues I refer to?
- Are the JIRA issues that I refer to, resolved?

It will return an exit status of your choice so you can inform, warn or stop yourself when committing code.

** The code
I made issuecheck when I was searching for a simple challenge to aquaint myself with [[http://en.wikipedia.org/wiki/C%252B%252B11][C++11]] and [[http://www.boost.org/][boost C++ libraries]]. issuecheck seemed contains all I wanted to learn for now.
- C++11
- cmake
- cpack
- cpp_netlib
- Boost program options
- Boost regex 
- Boost filesystem
- Boost encode
- Boost uri
- Boost property tree (json)
- Boost function
- Boost archive
- Google test

** Known Issues

*** Boost on Linux: vulnerability for missing locale

You might get this error when running issuecheck:
: terminate called after throwing an instance of 'std::runtime_error'
: what():  locale::facet::_S_create_c_locale name not valid

It happens when a language in your "locale" of your shell is not generated by locale-gen on your system. This often happens to me when I ssh into some system. My ssh client forwards my local locale to the remote shell that might not speak my language.

The Boost libraries that I use are vulnerable to this. The Boost guys know and I guess they will fix it eventually.

**** Recommended workaround: generate the missing language

- find out what your local is ::
    run this command on your prompt:
    : locale
    on my system it gives me something like this:
    : LANG=en_US.UTF-8
    : LANGUAGE=
    : LC_CTYPE="en_US.UTF-8"
    : LC_NUMERIC=nb_NO.UTF-8
    : LC_TIME=nb_NO.UTF-8
    : LC_COLLATE="en_US.UTF-8"
    : LC_MONETARY=nb_NO.UTF-8
    : LC_MESSAGES="en_US.UTF-8"
    : LC_PAPER=nb_NO.UTF-8
    : LC_NAME=nb_NO.UTF-8
    : LC_ADDRESS=nb_NO.UTF-8
    : LC_TELEPHONE=nb_NO.UTF-8
    : LC_MEASUREMENT=nb_NO.UTF-8
    : LC_IDENTIFICATION=nb_NO.UTF-8
    : LC_ALL=
    In this case I have en_US.UTF-8 and nb_NO.UTF-8
- install the locales (they might already be there but that does not matter) ::
    by doing:
    : sudo locale-gen en_US
    : sudo locale-gen en_US.UTF-8
    : sudo locale-gen nb_NO
    : sudo locale-gen nb_NO.UTF-8
- verify ::
    : locale -a | sed -n -e '/nb_NO/p' -e '/en_US/p'
    gives me:
    : en_US
    : en_US.iso88591
    : en_US.utf8
    : nb_NO
    : nb_NO.iso88591
    : nb_NO.utf8

now it should all work

**** Other workaround: temporarily change your locale

run this every time after you log into your system
: export LC_ALL="en_US.UTF-8"

**** Other workaround: tell your ssh client to stop forwarding

Stop forwarding locale from your client
/etc/ssh/ssh_config, comment out
: #SendEnv LANG...

**** Other workaround: stop ssh server from accepting client locales

stop accepting on the server
/etc/ssh/sshd_config , comment out
: #AcceptEnv LANG LC_*


